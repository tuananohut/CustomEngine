Texture2D shaderTexture1: register(t0);
Texture2D shaderTexture2: register(t1);
Texture2D shaderTexture2: register(t2);
SamplerState SampleType: register(s0);

struct PixelInputType
{
	float4 position: SV_POSITION;
	float2 tex: TEXCOORD0;
};

float4 AlphaMapPixelShader(PixelInputType input): SV_TARGET
{
	float4 color1;
	float4 color2;
	float4 alphaValue;
	float4 blendColor;

	color1 = shaderTexture1.Sample(SampleType, input.tex);
	color2 = shaderTexture2.Sample(SampleType, input.tex);
	alphaValue = shaderTexture3.Sample(SampleType, input.tex);
	blendColor = (alphaValue * color1) + ((1.0 - alphaValue) * color2);

	blendColor = saturate(blendColor);

	return blendColor;
}