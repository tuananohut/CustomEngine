Texture2D shaderTexture: register(t0);
SamplerState SampleType: register(s0);

struct PixelInputType
{
	float4 position: SV_POSITION;
	float2 tex: TEXCOORD0;
	float clip: SV_ClipDistance0;
};

float4 ClipPlanePixelShader(PixelInputType input): SV_TARGET
{
	// float4 textureColor;
	// textureColor = shaderTexture.Sample(SampleType, input.tex);
	// return textureColor;

	if (input.clip < 0)
    {
        discard; // Discards pixels that are below the clip plane
    }

	float r = abs(sin(input.tex.x * 10.0)); 
    float g = abs(sin(input.tex.y * 10.0 + 1.0)); 
    float b = abs(sin((input.tex.x + input.tex.y) * 10.0 + 2.0));

    float4 colorfulColor = float4(r, g, b, 1.0);
	
	return colorfulColor;
}