Texture2D colorTexture: register(t0);
Texture2D glowTexture: register(t1);
SamplerState SampleType: register(s0);

cbuffer GlowBuffer
{
	float glowStrength;
	float3 padding;
};

struct PixelInputType
{
	float4 position: SV_POSITION;
	float2 tex: TEXCOORD0;
};

float4 GlowPixelShader(PixelInputType input): SV_TARGET
{
	float4 textureColor; 
	float4 glowMap;
	float4 color; 

	textureColor = colorTexture.Sample(SampleType, input.tex);
	
	glowMap = glowTexture.Sample(SampleType, input.tex);

	color = saturate(textureColor + (glowMap * glowStrength));

	return color;
}